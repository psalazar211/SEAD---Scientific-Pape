# -*- coding: utf-8 -*-
"""sobel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WbS5iK0o-pNrRmTMiz3En5v3ul9PBbWF

Model
"""

import tensorflow as tf

model = tf.keras.models.Sequential([
	tf.keras.layers.Input(dtype=float,shape=(9,)),
	tf.keras.layers.Dense(32, activation='sigmoid'),
	tf.keras.layers.Dropout(0.01),
	tf.keras.layers.Dense(32, activation='sigmoid'),
	tf.keras.layers.Dense(1)
])

model.compile(optimizer='RMSprop', loss=tf.keras.metrics.mean_squared_error, metrics=["mae"])

model.summary()

inTrain = []
outTrain = []
inTest = []
outTest = []

f = open("aggregated.fann", "r")
shape = f.readline()
num=int(shape.split()[0])
numTrain = int(num*0.9)
numTest = int(num*0.1)

for i in range(numTrain):
  inLine = f.readline()
  outLine = f.readline()
  if not inLine or not outLine:
    break
  inStr = inLine.split()
  inFloat = []
  inFloat.append(float(inStr[0]))
  inFloat.append(float(inStr[1]))
  inFloat.append(float(inStr[2]))
  inFloat.append(float(inStr[3]))
  inFloat.append(float(inStr[4]))
  inFloat.append(float(inStr[5]))
  inFloat.append(float(inStr[6]))
  inFloat.append(float(inStr[7]))
  inFloat.append(float(inStr[8]))
  inTrain.append(inFloat)
  outTrain.append(float(outLine))

for i in range(numTest):
  inLine = f.readline()
  outLine = f.readline()
  if not inLine or not outLine:
    break
  inStr = inLine.split()
  inFloat = []
  inFloat.append(float(inStr[0]))
  inFloat.append(float(inStr[1]))
  inFloat.append(float(inStr[2]))
  inFloat.append(float(inStr[3]))
  inFloat.append(float(inStr[4]))
  inFloat.append(float(inStr[5]))
  inFloat.append(float(inStr[6]))
  inFloat.append(float(inStr[7]))
  inFloat.append(float(inStr[8]))
  inTest.append(inFloat)
  outTest.append(float(outLine))

f.close()

"""Train model"""

model.fit(inTrain, outTrain, epochs=100)

"""Evaluate"""

ev = model.evaluate(inTest, outTest, verbose=1)

print("MAE", ev[1])